@use "module";
@use "sass:math";

// Gaping
// Fallback for gap on non supporting browsers
@mixin gaping-size {
	@layer modifiers {
		.#{module.$prefix-default}--gaping {
			// 15, 1rem
			@include module.extend-viewports-classes {
				margin: 0 -1rem -1rem 0;

				> *:not(:last-child) {
					margin-right: 1rem;
					margin-bottom: 1rem;
				}
			}

			&-0,
			&-none {
				@include module.extend-viewports-classes {
					margin: 0;

					> *:not(:last-child) {
						margin-right: 0;
						margin-bottom: 0;
					}
				}
			}

			&X {
				// X dimension
				// 15, 1rem
				@include module.extend-viewports-classes {
					margin-right: -1rem;

					> *:not(:last-child) {
						margin-right: 1rem;
					}
				}

				&-0,
				&-none {
					@include module.extend-viewports-classes {
						margin-right: 0;

						> *:not(:last-child) {
							margin-right: 0;
						}
					}
				}
			}

			&Y {
				// Y dimension
				// 15, 1rem
				@include module.extend-viewports-classes {
					> *:not(:last-child) {
						margin-bottom: 1rem;
					}
				}

				&-0,
				&-none {
					@include module.extend-viewports-classes {
						margin-bottom: 0;

						> *:not(:last-child) {
							margin-bottom: 0;
						}
					}
				}
			}

			@for $i from 1 through 10 {
				$value: math.div($i, 3);

				&-#{$i * 5} {
					@include module.extend-viewports-classes {
						margin: 0 ($value * -1rem) ($value * -1rem) 0;

						> * {
							margin: 0 ($value * 1rem) ($value * 1rem) 0;
						}
					}
				}
				&X-#{$i * 5} {
					@include module.extend-viewports-classes {
						margin-right: $value * -1rem;

						> *:not(:last-child) {
							margin-right: $value * 1rem;
						}
					}
				}
				&Y-#{$i * 5} {
					@include module.extend-viewports-classes {
						margin-bottom: $value * -1rem;

						> *:not(:last-child) {
							margin-bottom: $value * 1rem;
						}
					}
				}
			}
		}
	}
}
