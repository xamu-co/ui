@use "../utils/module" as utils;
@use "../utils/system";
@use "sass:meta";
@use "sass:list";

// Style System definitions
// Use this if your working with the whole system
// Avoild if you already have your styles setup and just are using some modules
//
// @group Base
@mixin initialize {
	@layer definitions {
		code {
			font-family: utils.family(code);
		}

		dialog {
			margin: auto;
			background: transparent;
			overflow: visible;
			position: fixed;

			> .#{utils.$layout-modal} {
				max-width: calc(100vw - 2.4rem);
				max-width: calc(100dvw - 2.4rem);
				max-height: calc(100vh - 2.4rem);
				max-height: calc(100dvh - 2.4rem);
			}

			&::backdrop {
				background: utils.color(dark, 0.3);
				backdrop-filter: blur(1rem) saturate(2);
			}

			&[open]:has(dialog[open]) {
				transform: scale(0.9);
			}
		}
	}
	@layer defaults {
		::selection {
			background: utils.$color-select-bg;
			color: utils.$color-select-txt;
		}

		* {
			line-height: utils.$size-line-height;
			color: inherit;
			text-shadow: inherit;
		}

		// broken asset fallback styles
		img,
		iframe {
			display: block;
			overflow: hidden;
			color: transparent;

			// bgColor
			@include utils.linear-gradient(135deg, #d4d4d4 0, #00b6ff 500%);

			&::before {
				content: "\f7a9";
				font-family: utils.family(icons);
				font-weight: 900;
				color: utils.color(danger);
				font-size: utils.size(xx);
				width: 100%;
				height: 100%;
				position: absolute;
				top: 0;
				left: 0;
				padding: 1rem;

				@include utils.flex-box(column, nowrap, center, center);
			}
		}

		a,
		b,
		h1,
		h2,
		h3,
		h4,
		h5,
		h6,
		th,
		button,
		strong {
			// @defaults txtWeight
			font-weight: utils.weight(bold);
		}

		h1,
		h2,
		h3,
		h4,
		h5,
		h6 {
			font-family: utils.family(title);
		}

		h1:not([class*="swal"]) {
			// @defaults txtSize
			font-size: utils.size(xl);

			@if utils.$allow-responsive {
				@media (width > utils.$querie-tablet) {
					font-size: utils.size(xx);
				}
			}
		}

		h2:not([class*="swal"]) {
			// @defaults txtSize
			font-size: utils.size(lg);

			@if utils.$allow-responsive {
				@media (width > utils.$querie-tablet) {
					font-size: utils.size(xl);
				}
			}
		}

		h3:not([class*="swal"]) {
			// @defaults txtSize
			font-size: utils.size(md);

			@if utils.$allow-responsive {
				@media (width > utils.$querie-tablet) {
					font-size: utils.size(lg);
				}
			}
		}

		h1:not([class*="swal"]),
		h2:not([class*="swal"]),
		h3:not([class*="swal"]) {
			br {
				display: none;
			}

			@if utils.$allow-responsive {
				@media (width > utils.$querie-tablet) {
					br {
						display: inline;
					}
				}
			}
		}

		h4:not([class*="swal"]) {
			// @defaults txtSize
			font-size: utils.size(md);
		}

		html {
			width: 100%;
			height: 100%;
			overflow: hidden auto;
			font-size: 98%;
			font-weight: utils.weight();
			color: utils.$color-text;
			line-height: utils.$size-line-height;

			// Dinamically switch UI size
			@media (hover: none) {
				@if utils.$allow-responsive and utils.$allow-responsive-upscaling {
					@media (width <= utils.$querie-tv) {
						font-size: 100%;
					}
					@media (width <= utils.$querie-desktop) {
						font-size: 102%;
					}
					@media (width <= utils.$querie-tablet) {
						font-size: 104%;
					}
					@media (width <= utils.$querie-smartphone) {
						font-size: 106%;
					}
					@media (width <= utils.$querie-smartwatch) {
						font-size: 108%;
					}
				}
			}
		}

		body {
			min-height: 100%;
			width: 100%;
			font-family: utils.family(default);
			font-size: utils.size();
			overflow: hidden;
			background-color: utils.$color-bg;

			@if utils.$allow-responsive {
				@media (width <= utils.$querie-tablet) and (hover: none) {
					@supports (-moz-appearance: none) {
						// firefox fix, scroll bug on android
						width: 100%;
						height: 100%;
						overflow: hidden auto;
					}
				}
			}

			th,
			td {
				&.#{utils.$prefix-default}--sticky {
					background-color: utils.$color-bg;
				}
			}
		}
	}
}
