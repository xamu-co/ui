@use "../utils/module" as utils;

// CSS reset
// General styling, layout agnostig classes and rules
//
// @group Base
@mixin reset {
	@layer resets {
		* {
			margin: 0;
			padding: 0;
			border: 0;
			position: relative;
			font-family: inherit;
			font-weight: inherit;
			font-size: 1em;
			scroll-behavior: smooth;
			-webkit-tap-highlight-color: transparent;
			vertical-align: inherit;

			&::before,
			&::after {
				// line-height: 1.2em;
				box-sizing: inherit;
			}

			&:active,
			&:focus,
			&:hover {
				outline: 0;
			}
		}

		svg {
			width: inherit;
			height: inherit;

			[_fill] {
				fill: none;
				stroke: none;
			}
		}

		textarea {
			resize: vertical;
		}

		button {
			background: transparent;
		}

		small {
			font-size: 0.7em;
		}

		a {
			text-decoration: none;
		}

		p {
			white-space: inherit;

			/* These are technically the same, but use both */
			overflow-wrap: break-word;
			word-wrap: break-word;

			/* This is the dangerous one in WebKit, as it breaks things wherever */
			// word-break: break-all;

			/* Instead use this non-standard one: */
			word-break: break-word;

			/* Adds a hyphen where the word breaks, if supported (No Blink) */
			hyphens: none;

			> a,
			> button {
				display: inline !important;

				// white-space: normal !important;
			}
		}

		hr {
			box-sizing: border-box;
		}

		html {
			text-rendering: optimizelegibility;
		}

		input[type="number"]:not(.#{utils.$prefix-default}--arrows) {
			/* Chrome, Safari, Edge, Opera */
			&::-webkit-outer-spin-button,
			&::-webkit-inner-spin-button {
				appearance: none;
				margin: 0;
			}

			/* Firefox */
			appearance: textfield;
		}

		i:not(.#{utils.$component-icon}, .#{utils.$component-svg}) {
			font-style: italic;
		}

		ul,
		ol {
			list-style: none;
		}

		a,
		button,
		textarea {
			appearance: none;
		}

		a,
		button,
		label {
			text-align: center;
		}

		a,
		button,
		label,
		select,
		datalist {
			@layer defaults {
				& {
					// @defaults txtWrap
					white-space: nowrap;
				}
			}

			&:not(:disabled, [disabled]:not([disabled="false"])):hover {
				cursor: pointer;
			}
			&.#{utils.$status-is-route-exact}:not(
					[class*="#{utils.$status-toggle}"],
					.#{utils.$status-no-route},
					.#{utils.$status-no-route-exact}
				) {
				pointer-events: none;
			}
		}

		h1,
		h2,
		h3,
		h4,
		h5,
		h6 {
			@layer defaults {
				&,
				* {
					// @defaults txtWrap
					white-space: pre-line;
				}
			}
		}

		// basic transition
		//
		// @group SharedStyles
		a,
		button,
		select,
		datalist,
		label,
		label:after,
		.box,
		.#{utils.$component-svg} [fill]:not([fill="none"]),
		i.#{utils.$component-icon}:before,
		*[data-tooltip]:before,
		[class*="avatar"],
		[class*="avatar"] img {
			transition:
				all 0.1s ease-out,
				background-image 0s;
		}
	}
}
