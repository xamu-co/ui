@use "module";
@use "sass:meta";
@use "sass:selector";

// svg icon
//
// @group Components
@mixin svg {
	@layer definitions {
		a,
		label,
		button {
			&:not(.#{module.$component-button-toggle}) {
				&:hover,
				&.#{module.$status-is-active},
				&.#{module.$status-is-route-exact}:not(
						.#{module.$status-no-route},
						.#{module.$status-no-route-exact}
					) {
					.#{module.$component-svg} {
						@include module.svg-active-styles;
					}
				}
			}
		}

		.#{module.$component-svg} {
			@include module.icon-styles;

			&,
			svg {
				@include module.flex-box(row, nowrap, center, center, inline-flex);
			}

			&:not(.#{module.$status-no-override}) {
				[fill]:not([fill="none"], .#{module.$status-no-override}) {
					fill: var(--cl, var(--cls, #{module.color(secondary)}));
				}
			}

			&:hover,
			&.#{module.$status-is-active},
			&.#{module.$status-is-route-exact}:not(
					.#{module.$status-no-route},
					.#{module.$status-no-route-exact}
				) {
				@include module.svg-active-styles;
			}

			// logo theme
			//
			// @group Modifiers
			@layer defaults {
				@include module.extend-themes using($name, $value, $is-default) {
					--cls: var(--cl, #{$value});
				}
			}

			// theme overrides
			//
			// @group Modifiers
			@if module.$allow-theme-overrides {
				&.#{module.$prefix-default}--tm-light:not(.#{module.$status-no-override}) {
					filter: drop-shadow(1px 1px 1px module.color(dark, 0.3));
				}
			}

			[fill="none"] {
				display: none;
			}
		}
	}
}
