@use "../utils/module" as utils;
@use "../utils/system";

// rule
//
// @group Pseudos
@mixin rule {
	// Svg rule path
	$rule-svg-path-start: "data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='";
	$rule-svg-path-y: "#{$rule-svg-path-start}1' height='12' viewBox='0 0 1 12'%3E%3Crect width='1' height='6' transform='translate(0 3)' fill='%23";
	$rule-svg-path-x: "#{$rule-svg-path-start}12' height='1' viewBox='0 0 12 1'%3E%3Crect width='6' height='1' transform='translate(3 0)' fill='%23";
	$rule-svg-path-end: "'/%3E%3C/svg%3E";

	@layer definitions {
		hr {
			opacity: 0.2;
			background-repeat: round;
			background-position: 50% 50%;
			flex: 0 0 auto;
			display: block;

			@layer defaults {
				// @defaults margin
				& {
					height: 2px;
					width: calc(100% + 1rem);
					margin: 0 -0.4rem;
				}
			}

			&:last-child:not(:nth-child(2), :only-child) {
				display: none;
			}

			// Delimiter theme
			//
			// @group Modifiers
			@include utils.extend-themes using($name, $value, $is-default) {
				background-image: url("#{$rule-svg-path-x}#{system.str-replace(#{$value}, '#')}#{$rule-svg-path-end}");

				&.#{utils.$prefix-default}--vertical {
					background-image: url("#{$rule-svg-path-y}#{system.str-replace(#{$value}, '#')}#{$rule-svg-path-end}");
				}

				&.#{utils.$prefix-default}--solid {
					background: utils.color($name);
				}
			}

			&.#{utils.$prefix-default}--vertical {
				@include utils.extend-viewports-classes {
					@layer defaults {
						// @defaults margin
						& {
							width: 2px;
							height: 100%;
							height: calc(100% + 1rem);
							margin: -0.4rem 0;
						}
					}
				}
			}
		}
	}
}
